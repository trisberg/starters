name: spring-mysql-jpa
displayName: Spring Data JPA with MySQL
version: 1.0.0
sourceUrl: github.com/markpollack/gs-accessing-data-mysql
language: java
framework: spring
services: mysql
homeUrl: https://github.com/markpollack/gs-accessing-data-mysql
tags:
  - database
  - spring
  - jpa
  - mysql
maintainer: https://github.com/dsyer
description: A Spring Boot application that connects to a MySQL database and uses Spring Data JPA to access the database.  Contains stub code for accessing User data using Spring Data JPA.
iconUrl: https://raw.githubusercontent.com/simple-starters/icons/master/icon-data.png
generatorNames:
  - kubernetes-kustomize-skaffold
  - kubernetes-resource-simple
actionNames:
  - github-repo-create

---
name: hello-fun
displayName: Spring Cloud Function Serverless App
version: 0.1.0
sourceUrl: github.com/simple-starters/hello-fun?ref=v0.1.0
language: java
framework: spring
homeUrl: https://github.com/simple-starters/hello-fun
tags:
  - spring
  - cloud
  - function
maintainer: https://github.com/trisberg
description: A basic hello world Spring Cloud Function serverless app
iconUrl: https://raw.githubusercontent.com/simple-starters/icons/master/icon-cloud.png
generatorNames:
  - none
  - knative-kustomize-skaffold
  - kubernetes-resource-simple
  - kubernetes-resource-skaffold
actionNames:
  - github-repo-create

---
name: native-fun
displayName: Spring Cloud Function Serverless Native Image App
version: 0.0.1
sourceUrl: github.com/simple-starters/native-fun?ref=main
language: java
framework: spring
homeUrl: https://github.com/simple-starters/native-fun
tags:
  - spring
  - cloud
  - function
  - serverless
  - native image
maintainer: https://github.com/trisberg
description: A basic hello world Spring Cloud Function serverless app with GraalVM Native Image Compilation
iconUrl: https://raw.githubusercontent.com/simple-starters/icons/master/icon-cloud.png
generatorNames:
  - none
  - knative-native-image
actionNames:
  - github-repo-create

---
name: todo-service
displayName: Spring Boot TODO service
version: 0.0.1-SNAPSHOT
sourceUrl: github.com/markpollack/todos-api
language: java
framework: spring
homeUrl: https://github.com/markpollack/todos-api
tags:
  - spring
maintainer: https://github.com/markpollack
description: A Spring Boot microservice that uses spring-boot-starter-web to implement a REST API for TODO(s)
iconUrl: https://raw.githubusercontent.com/simple-starters/icons/master/icon-boot.png
generatorNames:
  - none
  - kubernetes-resource-simple
  - kubernetes-resource-skaffold
  - kubernetes-kustomize-skaffold
actionNames:
  - github-repo-create

---
name: db-fun
displayName: Spring Cloud Function Serverless App with MySql
version: 0.1.0
sourceUrl: github.com/simple-starters/db-fun?ref=v0.1.0
language: java
framework: spring
services: mysql
homeUrl: https://github.com/simple-starters/db-fun
tags:
  - spring
  - cloud
  - function
  - mysql
maintainer: https://github.com/trisberg
description: A basic hello world Spring Cloud Function serverless app with db access
iconUrl: https://raw.githubusercontent.com/simple-starters/icons/master/icon-cloud.png
generatorNames:
  - knative-kustomize-skaffold
actionNames:
  - github-repo-create

---
name: kafka-fun
displayName: Spring Cloud Function Serverless App with Kafka
version: 0.0.1-SNAPSHOT
sourceUrl: github.com/simple-starters/kafka-fun
language: java
framework: spring
services: kafka
homeUrl: https://github.com/simple-starters/kafka-fun
tags:
  - spring
  - cloud
  - function
  - kafka
maintainer: https://github.com/trisberg
description: A basic hello world Spring Cloud Function serverless app using kafka
iconUrl: https://raw.githubusercontent.com/simple-starters/icons/master/icon-cloud.png
generatorNames:
  - knative-kustomize-skaffold
actionNames:
  - github-repo-create

---
name: hello-ruby
displayName: Sample Ruby App
version: 0.0.1-SNAPSHOT
sourceUrl: github.com/simple-starters/hello-ruby?ref=master
language: ruby
framework: sinatra
homeUrl: https://github.com/simple-starters/hello-ruby
tags:
  - ruby
  - sinatra
maintainer: https://github.com/trisberg
description: A basic hello world Ruby and Sinatra app
iconUrl: https://raw.githubusercontent.com/simple-starters/icons/master/icon-ruby.png
generatorNames:
  - none
  - kubernetes-web-app-skaffold
actionNames:
  - github-repo-create

---
name: spring-postgres-jpa
displayName: Spring Data JPA with Postgres
version: 1.0.0
sourceUrl: github.com/markpollack/docker-compose-postgres?ref=1.0.0
language: java
framework: spring
homeUrl: https://github.com/markpollack/docker-compose-postgres
tags:
  - spring
  - database
  - jpa
  - postgresql
maintainer: https://github.com/markpollack
description: A Spring Boot application that connects to a PostgreSQL database and uses Spring Data JPA to access the database.  Contains code for accessing Quote data.
iconUrl: https://raw.githubusercontent.com/simple-starters/icons/master/icon-data.png
generatorNames:
  - docker-compose
actionNames:
  - github-repo-create

---
name: fry-pharm-backend
displayName: Fry's Food - Pharmacy Backend Service - X
version: 1.0.0
sourceUrl: github.com/markpollack/frysfoodpharmbackend
language: java
framework: spring
services: mysql
homeUrl: https://github.com/markpollack/frysfoodpharmbackend
tags:
  - database
  - spring
  - jpa
  - mysql
maintainer: https://github.com/markpollack
description: The Fry's Pharmacy Backend service based on Kroger   Enterprise Application Framework (EAF), with SSO and common pharmacy services library support.
iconUrl: https://raw.githubusercontent.com/simple-starters/icons/master/icon-frys.png
generatorNames:
  - kubernetes-steeltoe-skaffold
actionNames:
  - github-repo-create-two-X

---
name: kroger-logistics-freight-order-service
displayName: Kroger Logistics Freight Ordering Service - X
version: 1.2.0
sourceUrl: github.com/markpollack/krogerlogistics
language: C#
framework: steeltoe
services: postgresql
homeUrl: https://github.com/markpollack/krogerlogistics
tags:
  - database
  - steeltoe
  - nhibernate
  - postgresql
maintainer: https://github.com/markpollack
description: Logistics Ordering service to tender freight orders to preferred company carriers, based on Krokger Enterprise Application Framework (EAF).
iconUrl: https://raw.githubusercontent.com/simple-starters/icons/master/icon-kroger.png
generatorNames:
  - knative-kustomize-skaffold
actionNames:
  - github-repo-create
  - github-repo-create-two-X

---
name: spring-rabbitmq
displayName: Spring and RabbitMQ Publisher - X
version: 1.1.1
sourceUrl: github.com/spring-guides/gs-messaging-rabbitmq//complete
language: java
framework: spring
services: rabbitmq
homeUrl: https://github.com/spring-guides/gs-messaging-rabbitmq
tags:
  - messaging
  - spring
  - rabbitmq
maintainer: https://github.com/dsyer
description: A Spring Boot application with stub code for publishing a message to RabbitMQ.
iconUrl: https://raw.githubusercontent.com/simple-starters/icons/master/icon-rabbitmq.png
generatorNames:
  - cloudfoundry
actionNames:
  - github-repo-create

---
name: dotnet-aspnet-hello
displayName: Base ASP.NET MVC Application -X
version: 1.0.2
sourceUrl: https://github.com/markpollack/HelloWorldAspNetCore
language: C#
framework: dotnet31
homeUrl: https://github.com/markpollack/HelloWorldAspNetCore
tags:
  - dotnet
  - mvc-31
  - web
maintainer: https://github.com/markpollack
description: The Hello World ASP.NET application with SSO integration.
iconUrl: https://raw.githubusercontent.com/simple-starters/icons/master/icon-dotnet.png
generatorNames:
  - kubernetes-steeltoe-skaffold
actionNames:
  - github-repo-create-two-X

#---
#name: initialzr-batch-application
#displayName: Spring Initializr Batch applicaiton using PostreSQL -X
#version: 1.0.1
## this should be sourceServiceUrl (options are sourceCommand, sourceServiceUrl, sourceUrl)
#sourceUrl: https://start.spring.io/#!type=maven-project&language=java&platformVersion=2.3.1.RELEASE&packaging=jar&jvmVersion=1.8&groupId=com.example&artifactId=demo&name=demo&description=Demo%20project%20for%20Spring%20Boot&packageName=com.example.demo&dependencies=batch,postgresql
#language: java
#framework: spring
#homeUrl: https://start.spring.io
#tags:
#  - java
#  - spring
#  - postgresql
#  - batch
#maintainer: https://github.com/markpollack
#description: Initializr creates Spring Batch application using PostgreSQL
#iconUrl: https://raw.githubusercontent.com/simple-starters/icons/master/icon-batch.png
#generatorNames:
#  - kubernetes-kustomize-skaffold
#actionNames:
#  - github-repo-create

---
name: boot-angular-gateway-oidc
displayName: Spring Boot + Angular + Spring Cloud Gateway + OpenID Connect - X
version: 1.0.0
sourceUrl: github.com/asaikali/boot-angular-gateway-oidc
language: java
framework: spring
homeUrl: https://github.com/asaikali/boot-angular-gateway-oidc
tags:
  - java
  - spring
  - angular
  - spring-cloud-gateway
  - openid-connect
maintainer: https://github.com/asaikali
description: A Spring Boot application for implementing an API and using Angular for the frontend, served via Spring Cloud Gateway, Using Cloud Foundry Container to container networking.
iconUrl: https://raw.githubusercontent.com/simple-starters/icons/master/icon-boot-angular.png
generatorNames:
  - cloudfoundry
actionNames:
  - github-repo-create